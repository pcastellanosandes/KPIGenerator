/*
 * generated by Xtext 2.10.0
 */
grammar InternalKPIGenerator;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package co.edu.uniandes.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package co.edu.uniandes.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.edu.uniandes.services.KPIGeneratorGrammarAccess;

}

@parser::members {

 	private KPIGeneratorGrammarAccess grammarAccess;

    public InternalKPIGeneratorParser(TokenStream input, KPIGeneratorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Root";
   	}

   	@Override
   	protected KPIGeneratorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	iv_ruleRoot=ruleRoot
	{ $current=$iv_ruleRoot.current; }
	EOF;

// Rule Root
ruleRoot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getRootAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getProjectsProjectParserRuleCall_1_0());
				}
				lv_projects_1_0=ruleProject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"projects",
						lv_projects_1_0,
						"co.edu.uniandes.KPIGenerator.Project");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getRootAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleProject
entryRuleProject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectRule()); }
	iv_ruleProject=ruleProject
	{ $current=$iv_ruleProject.current; }
	EOF;

// Rule Project
ruleProject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProjectAccess().getProjectAction_0(),
					$current);
			}
		)
		otherlv_1='{"name":"'
		{
			newLeafNode(otherlv_1, grammarAccess.getProjectAccess().getNameKeyword_1());
		}
		(
			(
				lv_projectName_2_0=RULE_CADENA
				{
					newLeafNode(lv_projectName_2_0, grammarAccess.getProjectAccess().getProjectNameCADENATerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectRule());
					}
					setWithLastConsumed(
						$current,
						"projectName",
						lv_projectName_2_0,
						"co.edu.uniandes.KPIGenerator.CADENA");
				}
			)
		)
		otherlv_3='","phases":['
		{
			newLeafNode(otherlv_3, grammarAccess.getProjectAccess().getPhasesKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getPhasesPhaseParserRuleCall_4_0());
				}
				lv_phases_4_0=rulePhase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					add(
						$current,
						"phases",
						lv_phases_4_0,
						"co.edu.uniandes.KPIGenerator.Phase");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_5=']}'
		{
			newLeafNode(otherlv_5, grammarAccess.getProjectAccess().getRightSquareBracketRightCurlyBracketKeyword_5());
		}
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getProjectAccess().getCommaKeyword_6());
			}
		)?
	)
;

// Entry rule entryRulePhase
entryRulePhase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhaseRule()); }
	iv_rulePhase=rulePhase
	{ $current=$iv_rulePhase.current; }
	EOF;

// Rule Phase
rulePhase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPhaseAccess().getPhaseAction_0(),
					$current);
			}
		)
		otherlv_1='{"name":"'
		{
			newLeafNode(otherlv_1, grammarAccess.getPhaseAccess().getNameKeyword_1());
		}
		(
			(
				lv_phaseName_2_0=RULE_CADENA
				{
					newLeafNode(lv_phaseName_2_0, grammarAccess.getPhaseAccess().getPhaseNameCADENATerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhaseRule());
					}
					setWithLastConsumed(
						$current,
						"phaseName",
						lv_phaseName_2_0,
						"co.edu.uniandes.KPIGenerator.CADENA");
				}
			)
		)
		otherlv_3='","tasks":['
		{
			newLeafNode(otherlv_3, grammarAccess.getPhaseAccess().getTasksKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhaseAccess().getTasksTaskParserRuleCall_4_0());
				}
				lv_tasks_4_0=ruleTask
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhaseRule());
					}
					add(
						$current,
						"tasks",
						lv_tasks_4_0,
						"co.edu.uniandes.KPIGenerator.Task");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_5=']}'
		{
			newLeafNode(otherlv_5, grammarAccess.getPhaseAccess().getRightSquareBracketRightCurlyBracketKeyword_5());
		}
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getPhaseAccess().getCommaKeyword_6());
			}
		)?
	)
;

// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	iv_ruleTask=ruleTask
	{ $current=$iv_ruleTask.current; }
	EOF;

// Rule Task
ruleTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTaskAccess().getTaskAction_0(),
					$current);
			}
		)
		otherlv_1='{"id":'
		{
			newLeafNode(otherlv_1, grammarAccess.getTaskAccess().getIdKeyword_1());
		}
		(
			(
				lv_taskId_2_0=RULE_INT
				{
					newLeafNode(lv_taskId_2_0, grammarAccess.getTaskAccess().getTaskIdINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"taskId",
						lv_taskId_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=',"name":"'
		{
			newLeafNode(otherlv_3, grammarAccess.getTaskAccess().getNameKeyword_3());
		}
		(
			(
				lv_taskName_4_0=RULE_CADENA
				{
					newLeafNode(lv_taskName_4_0, grammarAccess.getTaskAccess().getTaskNameCADENATerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"taskName",
						lv_taskName_4_0,
						"co.edu.uniandes.KPIGenerator.CADENA");
				}
			)
		)
		otherlv_5='","useCase":"'
		{
			newLeafNode(otherlv_5, grammarAccess.getTaskAccess().getUseCaseKeyword_5());
		}
		(
			(
				lv_useCase_6_0=RULE_CADENA
				{
					newLeafNode(lv_useCase_6_0, grammarAccess.getTaskAccess().getUseCaseCADENATerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"useCase",
						lv_useCase_6_0,
						"co.edu.uniandes.KPIGenerator.CADENA");
				}
			)
		)
		otherlv_7='","sequenceNumber":'
		{
			newLeafNode(otherlv_7, grammarAccess.getTaskAccess().getSequenceNumberKeyword_7());
		}
		(
			(
				lv_sequenceNumber_8_0=RULE_DOUBLE
				{
					newLeafNode(lv_sequenceNumber_8_0, grammarAccess.getTaskAccess().getSequenceNumberDOUBLETerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"sequenceNumber",
						lv_sequenceNumber_8_0,
						"co.edu.uniandes.KPIGenerator.DOUBLE");
				}
			)
		)
		otherlv_9=',"description":"'
		{
			newLeafNode(otherlv_9, grammarAccess.getTaskAccess().getDescriptionKeyword_9());
		}
		(
			this_CADENA_10=RULE_CADENA
			{
				newLeafNode(this_CADENA_10, grammarAccess.getTaskAccess().getCADENATerminalRuleCall_10_0());
			}
			    |
			otherlv_11='-'
			{
				newLeafNode(otherlv_11, grammarAccess.getTaskAccess().getHyphenMinusKeyword_10_1());
			}
		)
		otherlv_12='","startDate":"'
		{
			newLeafNode(otherlv_12, grammarAccess.getTaskAccess().getStartDateKeyword_11());
		}
		(
			(
				lv_startDate_13_0=RULE_DATE
				{
					newLeafNode(lv_startDate_13_0, grammarAccess.getTaskAccess().getStartDateDATETerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"startDate",
						lv_startDate_13_0,
						"co.edu.uniandes.KPIGenerator.DATE");
				}
			)
		)
		otherlv_14='","dueDate":"'
		{
			newLeafNode(otherlv_14, grammarAccess.getTaskAccess().getDueDateKeyword_13());
		}
		(
			(
				lv_dueDate_15_0=RULE_DATE
				{
					newLeafNode(lv_dueDate_15_0, grammarAccess.getTaskAccess().getDueDateDATETerminalRuleCall_14_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"dueDate",
						lv_dueDate_15_0,
						"co.edu.uniandes.KPIGenerator.DATE");
				}
			)
		)
		otherlv_16='","priority":"'
		{
			newLeafNode(otherlv_16, grammarAccess.getTaskAccess().getPriorityKeyword_15());
		}
		(
			(
				(
					lv_priority_17_1=RULE_CADENA
					{
						newLeafNode(lv_priority_17_1, grammarAccess.getTaskAccess().getPriorityCADENATerminalRuleCall_16_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaskRule());
						}
						setWithLastConsumed(
							$current,
							"priority",
							lv_priority_17_1,
							"co.edu.uniandes.KPIGenerator.CADENA");
					}
					    |
					lv_priority_17_2='-'
					{
						newLeafNode(lv_priority_17_2, grammarAccess.getTaskAccess().getPriorityHyphenMinusKeyword_16_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaskRule());
						}
						setWithLastConsumed($current, "priority", lv_priority_17_2, null);
					}
				)
			)
		)
		otherlv_18='","isPrivate":'
		{
			newLeafNode(otherlv_18, grammarAccess.getTaskAccess().getIsPrivateKeyword_17());
		}
		(
			(
				lv_isPrivate_19_0=RULE_CADENA
				{
					newLeafNode(lv_isPrivate_19_0, grammarAccess.getTaskAccess().getIsPrivateCADENATerminalRuleCall_18_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"isPrivate",
						lv_isPrivate_19_0,
						"co.edu.uniandes.KPIGenerator.CADENA");
				}
			)
		)
		otherlv_20=',"progress":'
		{
			newLeafNode(otherlv_20, grammarAccess.getTaskAccess().getProgressKeyword_19());
		}
		(
			(
				lv_progress_21_0=RULE_INT
				{
					newLeafNode(lv_progress_21_0, grammarAccess.getTaskAccess().getProgressINTTerminalRuleCall_20_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"progress",
						lv_progress_21_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_22=',"status":"'
		{
			newLeafNode(otherlv_22, grammarAccess.getTaskAccess().getStatusKeyword_21());
		}
		(
			(
				lv_statusName_23_0=RULE_CADENA
				{
					newLeafNode(lv_statusName_23_0, grammarAccess.getTaskAccess().getStatusNameCADENATerminalRuleCall_22_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"statusName",
						lv_statusName_23_0,
						"co.edu.uniandes.KPIGenerator.CADENA");
				}
			)
		)
		otherlv_24='","statusText":"'
		{
			newLeafNode(otherlv_24, grammarAccess.getTaskAccess().getStatusTextKeyword_23());
		}
		(
			(
				lv_statusText_25_0=RULE_CADENA
				{
					newLeafNode(lv_statusText_25_0, grammarAccess.getTaskAccess().getStatusTextCADENATerminalRuleCall_24_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"statusText",
						lv_statusText_25_0,
						"co.edu.uniandes.KPIGenerator.CADENA");
				}
			)
		)
		otherlv_26='","assignedTo":"'
		{
			newLeafNode(otherlv_26, grammarAccess.getTaskAccess().getAssignedToKeyword_25());
		}
		(
			(
				lv_assignedTo_27_0=RULE_CADENA
				{
					newLeafNode(lv_assignedTo_27_0, grammarAccess.getTaskAccess().getAssignedToCADENATerminalRuleCall_26_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"assignedTo",
						lv_assignedTo_27_0,
						"co.edu.uniandes.KPIGenerator.CADENA");
				}
			)
		)
		otherlv_28='","createdDate":"'
		{
			newLeafNode(otherlv_28, grammarAccess.getTaskAccess().getCreatedDateKeyword_27());
		}
		(
			(
				lv_createdDate_29_0=RULE_DATEHOUR
				{
					newLeafNode(lv_createdDate_29_0, grammarAccess.getTaskAccess().getCreatedDateDATEHOURTerminalRuleCall_28_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"createdDate",
						lv_createdDate_29_0,
						"co.edu.uniandes.KPIGenerator.DATEHOUR");
				}
			)
		)
		otherlv_30='","completedDate":"'
		{
			newLeafNode(otherlv_30, grammarAccess.getTaskAccess().getCompletedDateKeyword_29());
		}
		(
			(
				(
					lv_completedDate_31_1=RULE_DATEHOUR
					{
						newLeafNode(lv_completedDate_31_1, grammarAccess.getTaskAccess().getCompletedDateDATEHOURTerminalRuleCall_30_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaskRule());
						}
						setWithLastConsumed(
							$current,
							"completedDate",
							lv_completedDate_31_1,
							"co.edu.uniandes.KPIGenerator.DATEHOUR");
					}
					    |
					lv_completedDate_31_2='-'
					{
						newLeafNode(lv_completedDate_31_2, grammarAccess.getTaskAccess().getCompletedDateHyphenMinusKeyword_30_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaskRule());
						}
						setWithLastConsumed($current, "completedDate", lv_completedDate_31_2, null);
					}
				)
			)
		)
		otherlv_32='","timeLoggedMin":'
		{
			newLeafNode(otherlv_32, grammarAccess.getTaskAccess().getTimeLoggedMinKeyword_31());
		}
		(
			(
				lv_timeLoggedMin_33_0=RULE_INT
				{
					newLeafNode(lv_timeLoggedMin_33_0, grammarAccess.getTaskAccess().getTimeLoggedMinINTTerminalRuleCall_32_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"timeLoggedMin",
						lv_timeLoggedMin_33_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_34=',"billableTime":'
		{
			newLeafNode(otherlv_34, grammarAccess.getTaskAccess().getBillableTimeKeyword_33());
		}
		(
			(
				lv_billableTime_35_0=RULE_INT
				{
					newLeafNode(lv_billableTime_35_0, grammarAccess.getTaskAccess().getBillableTimeINTTerminalRuleCall_34_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"billableTime",
						lv_billableTime_35_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_36=',"completedOnTime":'
		{
			newLeafNode(otherlv_36, grammarAccess.getTaskAccess().getCompletedOnTimeKeyword_35());
		}
		(
			(
				lv_completedOnTime_37_0=RULE_CADENA
				{
					newLeafNode(lv_completedOnTime_37_0, grammarAccess.getTaskAccess().getCompletedOnTimeCADENATerminalRuleCall_36_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"completedOnTime",
						lv_completedOnTime_37_0,
						"co.edu.uniandes.KPIGenerator.CADENA");
				}
			)
		)
		otherlv_38=',"timeEstimated":'
		{
			newLeafNode(otherlv_38, grammarAccess.getTaskAccess().getTimeEstimatedKeyword_37());
		}
		(
			(
				lv_timeEstimated_39_0=RULE_INT
				{
					newLeafNode(lv_timeEstimated_39_0, grammarAccess.getTaskAccess().getTimeEstimatedINTTerminalRuleCall_38_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"timeEstimated",
						lv_timeEstimated_39_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_40='}'
		{
			newLeafNode(otherlv_40, grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_39());
		}
		(
			otherlv_41=','
			{
				newLeafNode(otherlv_41, grammarAccess.getTaskAccess().getCommaKeyword_40());
			}
		)?
	)
;

RULE_CADENA : (('a'..'z'|'A'..'Z'|'\u00C1'|'\u00E1'|'\u00C9'|'\u00E9'|'\u00CD'|'\u00ED'|'\u00D3'|'\u00F3'|'\u00DA'|'\u00FA'|'-'|' '|'|'|'.'|'('|')')+ ('0'..'9')*)+;

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_DATE : '0'..'9' '0'..'9' '/' '0'..'9' '0'..'9' '/' '0'..'9' '0'..'9' '0'..'9' '0'..'9';

RULE_DATEHOUR : '0'..'9' '0'..'9' '/' '0'..'9' '0'..'9' '/' '0'..'9' '0'..'9' '0'..'9' '0'..'9' ' ' '0'..'9' '0'..'9' ':' '0'..'9' '0'..'9' (' AM'|' PM');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
