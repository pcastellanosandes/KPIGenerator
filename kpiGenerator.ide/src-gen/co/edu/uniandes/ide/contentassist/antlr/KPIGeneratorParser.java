/*
 * generated by Xtext 2.10.0
 */
package co.edu.uniandes.ide.contentassist.antlr;

import co.edu.uniandes.ide.contentassist.antlr.internal.InternalKPIGeneratorParser;
import co.edu.uniandes.services.KPIGeneratorGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class KPIGeneratorParser extends AbstractContentAssistParser {

	@Inject
	private KPIGeneratorGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalKPIGeneratorParser createParser() {
		InternalKPIGeneratorParser result = new InternalKPIGeneratorParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getStatusAccess().getStatusNameAlternatives_0_0(), "rule__Status__StatusNameAlternatives_0_0");
					put(grammarAccess.getBOOLAccess().getAlternatives_1(), "rule__BOOL__Alternatives_1");
					put(grammarAccess.getRootAccess().getGroup(), "rule__Root__Group__0");
					put(grammarAccess.getTaskAccess().getGroup(), "rule__Task__Group__0");
					put(grammarAccess.getProjectAccess().getGroup(), "rule__Project__Group__0");
					put(grammarAccess.getStatusAccess().getGroup(), "rule__Status__Group__0");
					put(grammarAccess.getBOOLAccess().getGroup(), "rule__BOOL__Group__0");
					put(grammarAccess.getRootAccess().getTasksAssignment_1(), "rule__Root__TasksAssignment_1");
					put(grammarAccess.getTaskAccess().getProjectAssignment_3(), "rule__Task__ProjectAssignment_3");
					put(grammarAccess.getTaskAccess().getMilestoneAssignment_5(), "rule__Task__MilestoneAssignment_5");
					put(grammarAccess.getTaskAccess().getNameAssignment_7(), "rule__Task__NameAssignment_7");
					put(grammarAccess.getTaskAccess().getTaskDescriptionAssignment_9(), "rule__Task__TaskDescriptionAssignment_9");
					put(grammarAccess.getTaskAccess().getStartDateAssignment_11(), "rule__Task__StartDateAssignment_11");
					put(grammarAccess.getTaskAccess().getDueDateAssignment_13(), "rule__Task__DueDateAssignment_13");
					put(grammarAccess.getTaskAccess().getPriorityAssignment_15(), "rule__Task__PriorityAssignment_15");
					put(grammarAccess.getTaskAccess().getPrivateAssignment_17(), "rule__Task__PrivateAssignment_17");
					put(grammarAccess.getTaskAccess().getProgressAssignment_19(), "rule__Task__ProgressAssignment_19");
					put(grammarAccess.getTaskAccess().getStatusAssignment_21(), "rule__Task__StatusAssignment_21");
					put(grammarAccess.getTaskAccess().getAssignedToAssignment_23(), "rule__Task__AssignedToAssignment_23");
					put(grammarAccess.getTaskAccess().getCreatedDateAssignment_25(), "rule__Task__CreatedDateAssignment_25");
					put(grammarAccess.getTaskAccess().getCreatedHourAssignment_26(), "rule__Task__CreatedHourAssignment_26");
					put(grammarAccess.getTaskAccess().getCompletedDateAssignment_32(), "rule__Task__CompletedDateAssignment_32");
					put(grammarAccess.getTaskAccess().getCompletedHourAssignment_33(), "rule__Task__CompletedHourAssignment_33");
					put(grammarAccess.getTaskAccess().getTimeLoggedAssignment_39(), "rule__Task__TimeLoggedAssignment_39");
					put(grammarAccess.getTaskAccess().getBillableMinutesAssignment_41(), "rule__Task__BillableMinutesAssignment_41");
					put(grammarAccess.getTaskAccess().getParentTaskAssignment_43(), "rule__Task__ParentTaskAssignment_43");
					put(grammarAccess.getTaskAccess().getCompletedOnTimeAssignment_45(), "rule__Task__CompletedOnTimeAssignment_45");
					put(grammarAccess.getTaskAccess().getTimeEstimatedAssignment_47(), "rule__Task__TimeEstimatedAssignment_47");
					put(grammarAccess.getTaskAccess().getTagsAssignment_49(), "rule__Task__TagsAssignment_49");
					put(grammarAccess.getProjectAccess().getNameAssignment_1(), "rule__Project__NameAssignment_1");
					put(grammarAccess.getStatusAccess().getStatusNameAssignment_0(), "rule__Status__StatusNameAssignment_0");
					put(grammarAccess.getStatusAccess().getTextAssignment_2(), "rule__Status__TextAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalKPIGeneratorParser typedParser = (InternalKPIGeneratorParser) parser;
			typedParser.entryRuleRoot();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public KPIGeneratorGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(KPIGeneratorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
